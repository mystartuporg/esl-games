service: esl-games-backend

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs16.x
  region: ap-southeast-1
  apiGateway:
    apiKeys:
      - name: esl-games-api-key             #Replace with API Key Name on deployment
        value: ${process.env.API_KEY}       #Replace with API Key Value on deployment
        description: Key for ESL Games API  #Replace with API Key Description on deployment

# package:
#   patterns:
#     - '../../node_modules/serverless-mysql/**'
#     - '../../node_modules/mysql/**'
#     - '../../node_modules/mysql2/**'
#     - '../../node_modules/denque/**'
#     - '../../node_modules/generate-function/**'
#     - '../../node_modules/iconv-lite/**'
#     - '../../node_modules/long/**'
#     - '../../node_modules/lru-cache/**'
#     - '../../node_modules/named-placeholders/**'
#     - '../../node_modules/seq-queue/**'
#     - '../../node_modules/sqlstring/**'
#     - '../../node_modules/is-property/**'
#     - '../../node_modules/pseudomap/**'
#     - '../../node_modules/yallist/**'
#     - '../../node_modules/safer-buffer/**'

functions:
  userInformation:
    handler: handler.userInformation
    events:
      - http:
          path: userInfo
          method: post
          cors:
            origin: '*'
          private: true
  userTransaction:
    handler: handler.userTransaction
    events:
      - http:
          path: userTran
          method: post
          cors:
            origin: '*'
          private: true
  getRewards:
    handler: handler.getRewards
    events:
      - http:
          path: rewards
          method: get
          cors:
            origin: '*'
          private: true

plugins:
  - serverless-domain-manager
  - serverless-webpack
  - serverless-dotenv-plugin
  - serverless-offline

custom:
  stage: ${opt:stage, self:provider.stage}
  domains:
    prod: esl-games-api.retsol.ph
    staging: staging-esl-games-api.retsol.ph
    dev: dev-esl-games-api.retsol.ph
  customDomain:
    domainName: ${self:custom.domains.${self:custom.stage}}
    stage: ${self:custom.stage}
    certificateName: '*.retsol.ph'
    createRoute53Record: true
    endpointType: regional

  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules:
      nodeModulesRelativeDir: '../../'
      forceInclude:
        - mysql2
        - serverless-mysql
    packager: 'yarn'
    packagerOptions:
      lockFile: '../../yarn.lock'
      scripts:
        # - yarn autoclean --init
        - yarn install
        # - yarn autoclean --force